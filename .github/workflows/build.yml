name: Build
on:
  workflow_dispatch:
  push:

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_KEY: ${{ secrets.APP_KEY }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.SECRET }}
  DEFAULT_SITE: ${{ secrets.DEFAULT_SITE }}

jobs:
  build:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup build env
        run: sudo apt-get -yq install g++ doxygen cmake libssl-dev git valgrind rsync
      - name: build
        run: make build
      - name: test
        run: |
          MEMCHECK=1 JUNIT=1 make stest-khc
          MEMCHECK=1 JUNIT=1 make stest-kii  
          MEMCHECK=1 JUNIT=1 make stest-jkii
          MEMCHECK=1 JUNIT=1 make stest-tio
          MEMCHECK=1 JUNIT=1 make ltest-kii
          MEMCHECK=1 JUNIT=1 make ltest-khc
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/test-results/junit/test-result.xml'
      - name: build docs
        run: |
          make -C khc clean doc
          make -C kii clean doc
          make -C jkii clean doc
          make -C tio clean doc
      - name: copy docs
        run: |
          mkdir -p ebisu-doc
          rsync -rR --delete khc/html ebisu-doc
          rsync -rR --delete kii/html ebisu-doc
          rsync -rR --delete jkii/html ebisu-doc
          rsync -rR --delete tio/html ebisu-doc
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

