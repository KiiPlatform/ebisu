name: Build
on:
  workflow_dispatch:
  push:

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup build env
        run: apt-get -yq install g++ doxygen cmake libssl-dev git valgrind rsync
  
  build:
    needs: setup
    steps:
      - name: build
        run: make build
  
  stest-khc:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make stest-khc

  stest-kii:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make stest-kii  

  stest-jkii:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make stest-jkii

  stest-tio:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make stest-tio

  ltest-kii:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make ltest-kii

  ltest-khc:
    needs: setup
    steps:
      - name: test
        run:  MEMCHECK=1 JUNIT=1 make ltest-khc

  stest:
    needs: [ stest-khc, stest-kii, stest-jkii, stest-tio ]
  
  ltest:
    needs: [ ltest-kii, ltest-khc ]
    
  docs:
    needs: [stest, ltest, build ]
    permissions:
      contents: read
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: build docs
        run: |
          make -C khc clean doc
          make -C kii clean doc
          make -C jkii clean doc
          make -C tio clean doc
      - name: copy docs
        run: |
          mkdir -p ebisu-doc
          rsync -rR --delete khc/html ebisu-doc
          rsync -rR --delete kii/html ebisu-doc
          rsync -rR --delete jkii/html ebisu-doc
          rsync -rR --delete tio/html ebisu-doc
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  test-results:
    needs: [ stest, ltest ]
    steps:
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/test-results/junit/test-result.xml'
